{"version":3,"sources":["components/Header.js","components/Layout.js","components/Home-Items.js","components/Home.js","components/Resources.js","components/Team.js","components/About.js","components/EditForm.js","App.js","serviceWorker.js","index.js"],"names":["_callee","response","data","MenuItems","regenerator_default","a","wrap","_context","prev","next","axios","get","concat","sent","result","dataItems","map","item","idx","react_default","createElement","Menu","Item","key","Link","to","link","name","abrupt","style","marginTop","size","position","stop","setupMenu","Layout","state","loadingData","Header","this","setState","Container","props","children","Component","homeItems","items","Card","fluid","Content","Meta","status","Description","description","details","Modal","trigger","Button","floated","primary","basic","Header_Header","List","bulleted","instructions","instruction","instrIdx","target","href","downloadButton","text","setupHomeItems","Home","msg","homeData","renderItems","itemComponents","arr","renderGrid","i","length","rowItems","slice","id","Grid","Column","mobile","computer","push","Row","_this","stackable","centered","document","title","Dimmer","active","inverted","Loader","textAlign","heading","Resources","sections","section","sectionId","subheading","content","resource","reversed","Team","About","EditForm","components","selectedComponent","componentData","getComponents","_this2","componentSelectors","rowButtons","component","onClick","selectComponent","column","getComponentData","window","location","pathname","renderComponents","App","HashRouter","components_Layout","Switch","Route","exact","path","Boolean","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1d2b0278.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nasync function setupMenu() {\n  const domain = 'http://localhost:8081'\n  \n  const response = await axios.get(`${domain}/get/menu`)\n  const { result: data } = response.data\n\n  const MenuItems = data.dataItems.map((item, idx) => <Menu.Item key={\"menuItem_\"+idx}><Link to={item.link}>{item.name}</Link></Menu.Item>)\n  return (\n    <Menu style={{ marginTop: '0px', }} size={'large'}>\n      <Menu.Item><Link to='/'>Docker4Edu</Link></Menu.Item>\n      <Menu.Menu position=\"right\">\n        {MenuItems}\n      </Menu.Menu>\n    </Menu>\n  );\n};\n\nexport default setupMenu","import React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport setupMenu from './Header';\n\nclass Layout extends Component {\n  state = {\n    loadingData: true,\n    Header: {}\n  }\n\n  async componentDidMount() {\n    const Header = await setupMenu()\n    this.setState({ Header, loadingData: false })\n  }\n\n  render() {\n    if (this.state.loadingData) {\n      return (<div></div>)\n    }\n    return (\n      <Container>\n        \n        { this.state.Header }\n        {this.props.children}\n      </Container>\n    );\n  }\n\n}\n\nexport default Layout","import React from \"react\";\nimport { Card, Button, Modal, Header, List } from \"semantic-ui-react\";\nimport axios from 'axios'\n\n\nasync function setupHomeItems() {\n  const domain = 'http://localhost:8081'\n  \n  const response = await axios.get(`${domain}/get/homeitems`)\n  const {result: data} = response.data\n\n  const homeItems = data.items.map((item, idx) => {\n    return (\n      <Card fluid key={\"card_\" + (idx)}>\n        <Card.Content>\n          <Card.Header>{item.name}</Card.Header>\n          <Card.Meta>\n            <span>Status: {item.status}</span>\n          </Card.Meta>\n          <Card.Description>{item.description}</Card.Description>\n          {item.details &&\n            <Modal size={'tiny'} trigger={<Button floated=\"right\" primary basic>Details</Button>}>\n              <Modal.Header>{item.name} Details</Modal.Header>\n              <Modal.Content>\n                <Modal.Description>\n                  <Header>Instructions</Header>\n                  <List bulleted>\n                    {item.details.instructions.map((instruction, instrIdx) => <List.Item key={\"card_\" + (idx) + \"_instr_\" + (instrIdx)}>{instruction}</List.Item>)}\n                  </List>\n                  <Header>Download</Header>\n                  <Button target=\"_blank\" href={item.details.downloadButton.link} primary>{item.details.downloadButton.text}</Button>\n                  <br />\n                </Modal.Description>\n              </Modal.Content>\n            </Modal>\n          }\n        </Card.Content>\n      </Card>\n    )\n  });\n  return homeItems\n}\n\n\nexport default setupHomeItems","import React, { Component } from \"react\";\nimport { Loader, Dimmer, Grid } from \"semantic-ui-react\";\nimport setupHomeItems from \"./Home-Items\";\nimport axios from 'axios';\n\nconst domain = \"http://localhost:8081\"\nclass Home extends Component {\n  state = {\n    msg: '',\n    loadingData: false,\n    homeData: {},\n    homeItems: {}\n  }\n\n  async componentDidMount() {\n    const response = await axios.get(`${domain}/get/home`)\n    const { result: homeData } = response.data\n    document.title = homeData.title;\n    this.setState({ loadingData: false, homeData, homeItems: await setupHomeItems() })\n  }\n\n  renderItems = () => {\n    const itemComponents = ((arr, size) => {\n      const renderGrid = []\n      for (var i = 0; i < arr.length; i += size) {\n        const subArray = arr.slice(i, i + size)\n        const rowItems = subArray.map((item, id) =>\n          <Grid.Column key={id} mobile={16} computer={8}>\n            {item}\n          </Grid.Column>\n        )\n        renderGrid.push(\n          <Grid.Row key={\"grid_row_\" + renderGrid.length + 1}>\n            {rowItems}\n          </Grid.Row>\n        )\n      }\n      return renderGrid\n    })(this.state.homeItems, 2)\n\n    return (\n      <Grid stackable centered>\n        {itemComponents}\n      </Grid>\n    );\n  }\n\n  render() {\n    if (this.state.loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n      <div>\n        <br />\n        <h1 style={{ \"textAlign\": \"center\" }}>{this.state.homeData.heading}</h1>\n        <br /><br />\n        {this.renderItems()}\n        <br /><br />\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport { Loader, Dimmer, Grid, List } from \"semantic-ui-react\";\nimport axios from 'axios'\n\nconst domain = 'http://localhost:8081'\nclass Resources extends Component {\n  \n  state = {\n    msg: '',\n    loadingData: true,\n    data: {}\n  }\n\n  async componentDidMount() {\n    const response = await axios.get(`${domain}/get/resources`)\n    const {result: data} = response.data\n    document.title = data.title;\n    this.setState({ loadingData: false, data });\n  }\n\n  render() {\n    if (this.state.loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n    const sections = this.state.data.items.map(section => {\n      return (\n        <div key={\"resources_section_\" + section.sectionId}>\n          {section.subheading && <h3>{section.subheading}</h3>}\n          <List bulleted>\n            {section.content.map((resource, idx) => <List.Item key={\"resources_section_\" + section.sectionId + \"_link_\" + idx} href={resource.link}>{resource.text}</List.Item>)}\n          </List>\n          <br />\n        </div>\n      )\n    })\n\n    return (\n      <div>\n        <Grid stackable reversed=\"mobile\">\n          <Grid.Column mobile={16} computer={8}>\n            <h2>{this.state.data.title}</h2>\n            {sections}\n          </Grid.Column>\n        </Grid>\n\n        <br /><br />\n      </div>\n    );\n  }\n}\n\nexport default Resources;","import React, { Component } from \"react\"\nimport { Loader, Dimmer, Grid, List } from \"semantic-ui-react\"\nimport axios from 'axios'\n\nclass Team extends Component {\n  state = {\n    msg: '',\n    loadingData: true,\n    data: {}\n  }\n\n  async componentDidMount() {\n    const domain = 'http://localhost:8081'\n    const response = await axios.get(`${domain}/get/team`)\n    const { result: data } = response.data\n    this.setState({ loadingData: false, data });\n  }\n\n  render() {\n    if (this.state.loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n    const sections = this.state.data.items.map(section => {\n      return (\n        <div key={\"team_section_\" + section.sectionId}>\n          {section.subheading && <h3>{section.subheading}</h3>}\n          <List bulleted>\n            {section.content.map((resource, idx) => <List.Item key={\"team_section_\" + section.sectionId + \"_link_\" + idx} href={resource.link}>{resource.text}</List.Item>)}\n          </List>\n          <br />\n        </div>\n      )\n    })\n\n    return (\n      <div>\n        <Grid stackable reversed=\"mobile\">\n          <Grid.Column mobile={16} computer={8}>\n            <h2>Team Members</h2>\n            {sections}\n          </Grid.Column>\n        </Grid>\n\n        <br /><br />\n      </div>\n    );\n  }\n}\n\nexport default Team;","import React, { Component } from \"react\";\nimport { Loader, Dimmer, Grid } from \"semantic-ui-react\";\n\nclass About extends Component {\n  state = {\n    msg: '',\n    loadingData: true,\n  }\n\n  async componentDidMount() {\n    document.title = \"Docker For Edu | About\";\n    this.setState({ loadingData: false });\n  }\n\n  render() {\n    if (this.state.loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n      <div>\n        <Grid stackable reversed=\"mobile\">\n          <Grid.Column mobile={16} computer={16}>\n            <h2>About This Site</h2>\n            <p>This is a website set up at the NYU Tandon School of Engineering, intended to forward using Docker in education.</p>\n          </Grid.Column>\n        </Grid>\n\n        <br /><br />\n      </div>\n    );\n  }\n}\n\nexport default About;","import React, { Component } from \"react\"\nimport { Button, Grid } from \"semantic-ui-react\"\n\nclass EditForm extends Component {\n  state = {\n    components: [],\n    selectedComponent: '',\n    componentData: {}\n  }\n\n  async componentDidMount() {\n    this.setState({\n      components: await this.getComponents()\n    })\n  }\n\n  async getComponents() {\n    /* Make a query to DB to return all the components, returning hardcoded values for now. */\n    return [\"Home\", \"Home-Items\", \"Menu\", \"Resources\", \"Team\"]\n  }\n\n  renderComponents() {\n    const componentSelectors = ((arr, size) => {\n      const renderGrid = []\n      for (let i = 0; i < arr.length; i += size) {\n        const subArray = arr.slice(i, i + size)\n        const rowButtons = subArray.map((component, id) =>\n          <Grid.Column mobile={12} computer={4} key={id}>\n            <Button floated=\"left\" onClick={() => this.selectComponent(component)} > {component} </Button>\n          </Grid.Column>\n        )\n        renderGrid.push(\n          <Grid.Row key={\"grid_row_\" + renderGrid.length + 1}>\n            {rowButtons}\n          </Grid.Row>\n        )\n      }\n      return renderGrid\n    })(this.state.components, 3)\n    return (\n      <Grid column='equal' centered>\n        {componentSelectors}\n      </Grid>\n    )\n  }\n\n  async getComponentData(component) {\n    /* Retrieve JSON from the DB for the selected component. */\n    return {}\n  }\n\n  async selectComponent(component) {\n    this.setState({\n      selectedComponent: component,\n      componentData: await this.getComponentData(component)\n    })\n  }\n\n  render() {\n    if (!this.state.selectedComponent) {\n      return (\n        <div>\n          <br />\n          <h3 style={{ \"textAlign\": \"center\" }}>Select the Component to Modify</h3>\n          <br /><br />\n          {this.renderComponents()}\n        </div>\n      )\n    } else {\n      return (\n        <form>\n          <div>Work in Progress!</div>\n          <button onClick={() => { window.location.pathname = \"/edit\" }}>Go Back to Components</button>\n        </form>\n      )\n    }\n  }\n}\n\nexport default EditForm","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Layout from './components/Layout';\nimport Home from './components/Home';\nimport Resources from './components/Resources';\nimport Team from './components/Team';\nimport About from './components/About';\nimport EditForm from './components/EditForm';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/resources\" component={Resources} />\n            <Route exact path=\"/team\" component={Team} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/edit\" component={EditForm} />\n          </Switch>\n        </Layout>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}