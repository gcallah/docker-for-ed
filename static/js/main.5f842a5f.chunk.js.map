{"version":3,"sources":["components/Header.js","components/Layout.js","components/Home-Items.js","components/Home.js","components/Resources.js","components/Team.js","components/About.js","components/EditForm.js","App.js","serviceWorker.js","index.js"],"names":["Header","MenuItems","data","map","item","idx","react_default","a","createElement","Menu","Item","key","Link","to","link","name","style","marginTop","size","position","Layout","props","Container","rel","href","children","homeItems","Card","fluid","Content","Meta","status","Description","description","details","Modal","trigger","Button","floated","primary","basic","Header_Header","List","bulleted","instructions","instruction","instrIdx","target","downloadButton","text","Home","state","msg","loadingData","renderItems","itemComponents","arr","renderGrid","i","length","rowItems","slice","id","Grid","Column","mobile","computer","push","Row","stackable","centered","this","setState","document","title","Dimmer","active","inverted","Loader","textAlign","Component","Resources","sections","section","sectionId","subheading","content","resource","reversed","Team","About","EditForm","components","selectedComponent","componentData","getComponents","_this2","componentSelectors","rowButtons","component","onClick","selectComponent","column","getComponentData","window","location","pathname","renderComponents","App","HashRouter","Switch","Route","exact","path","Boolean","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f842a5f.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport * as data from \"../data/menu.json\";\n\nexport default () => {\n  const MenuItems = data.dataItems.map((item, idx) => <Menu.Item key={\"menuItem_\"+idx}><Link to={item.link}>{item.name}</Link></Menu.Item>)\n  return (\n    <Menu style={{ marginTop: '0px', }} size={'large'}>\n      <Menu.Item><Link to='/'>Docker4Edu</Link></Menu.Item>\n      <Menu.Menu position=\"right\">\n        {MenuItems}\n      </Menu.Menu>\n    </Menu>\n  );\n};","import React from 'react';\nimport { Container } from 'semantic-ui-react';\nimport Header from './Header';\n\nexport default props => {\n  return (\n    <Container>\n      <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.3/semantic.min.css\"></link>\n      <Header />\n      {props.children}\n    </Container>\n  );\n};","import React from \"react\";\nimport { Card, Button, Modal, Header, List } from \"semantic-ui-react\";\nimport * as data from \"../data/homeitems.json\";\n\nconst homeItems = data.items.map((item, idx) => {\n  return (\n    <Card fluid key={\"card_\" + (idx)}>\n      <Card.Content>\n        <Card.Header>{item.name}</Card.Header>\n        <Card.Meta>\n          <span>Status: {item.status}</span>\n        </Card.Meta>\n        <Card.Description>{item.description}</Card.Description>\n        {item.details &&\n          <Modal size={'tiny'} trigger={<Button floated=\"right\" primary basic>Details</Button>}>\n            <Modal.Header>{item.name} Details</Modal.Header>\n            <Modal.Content>\n              <Modal.Description>\n                <Header>Instructions</Header>\n                <List bulleted>\n                  {item.details.instructions.map((instruction, instrIdx) => <List.Item key={\"card_\" + (idx) + \"_instr_\" + (instrIdx)}>{instruction}</List.Item>)}\n                </List>\n                <Header>Download</Header>\n                <Button target=\"_blank\" href={item.details.downloadButton.link} primary>{item.details.downloadButton.text}</Button>\n                <br />\n              </Modal.Description>\n            </Modal.Content>\n          </Modal>\n        }\n      </Card.Content>\n    </Card>\n  )\n});\n\nexport default homeItems;","import React, { Component } from \"react\";\nimport { Loader, Dimmer, Grid } from \"semantic-ui-react\";\nimport homeItems from \"./Home-Items\";\nimport * as data from \"../data/home.json\";\n\nclass Home extends Component {\n  state = {\n    msg: '',\n    loadingData: false,\n  }\n\n  async componentDidMount() {\n    this.setState({ loadingData: true });\n    document.title = data.title;\n    this.setState({ loadingData: false });\n  }\n\n  renderItems = () => {\n    const itemComponents = ((arr, size) => {\n      const renderGrid = []\n      for (var i = 0; i < arr.length; i += size) {\n        const subArray = arr.slice(i, i + size)\n        const rowItems = subArray.map((item, id) =>\n          <Grid.Column key={id} mobile={16} computer={8}>\n            {item}\n          </Grid.Column>\n        )\n        renderGrid.push(\n          <Grid.Row key={\"grid_row_\" + renderGrid.length + 1}>\n            {rowItems}\n          </Grid.Row>\n        )\n      }\n      return renderGrid\n    })(homeItems, 2)\n\n    return (\n      <Grid stackable centered>\n        {itemComponents}\n      </Grid>\n    );\n  }\n\n  render() {\n    if (this.state.loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n      <div>\n        <br />\n        <h1 style={{ \"textAlign\": \"center\" }}>{data.heading}</h1>\n        <br /><br />\n        {this.renderItems()}\n        <br /><br />\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport { Loader, Dimmer, Grid, List } from \"semantic-ui-react\";\nimport * as data from \"../data/resources.json\";\n\nclass Resources extends Component {\n  state = {\n    msg: '',\n    loadingData: false,\n  }\n\n  async componentDidMount() {\n    this.setState({ loadingData: true });\n    document.title = data.title;\n    this.setState({ loadingData: false });\n  }\n\n  render() {\n    if (this.state.loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n    const sections = data.items.map(section => {\n      return (\n        <div key={\"resources_section_\" + section.sectionId}>\n          {section.subheading && <h3>{section.subheading}</h3>}\n          <List bulleted>\n            {section.content.map((resource, idx) => <List.Item key={\"resources_section_\" + section.sectionId + \"_link_\" + idx} href={resource.link}>{resource.text}</List.Item>)}\n          </List>\n          <br />\n        </div>\n      )\n    })\n\n    return (\n      <div>\n        <Grid stackable reversed=\"mobile\">\n          <Grid.Column mobile={16} computer={8}>\n            <h2>Resources</h2>\n            {sections}\n          </Grid.Column>\n        </Grid>\n\n        <br /><br />\n      </div>\n    );\n  }\n}\n\nexport default Resources;","import React, { Component } from \"react\";\nimport { Loader, Dimmer, Grid, List } from \"semantic-ui-react\";\nimport * as data from \"../data/team.json\";\n\nclass Team extends Component {\n  state = {\n    msg: '',\n    loadingData: false,\n  }\n\n  async componentDidMount() {\n    this.setState({ loadingData: true });\n    document.title = data.title;\n    this.setState({ loadingData: false });\n  }\n\n  render() {\n    if (this.state.loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n    const sections = data.items.map(section => {\n      return (\n        <div key={\"team_section_\" + section.sectionId}>\n          {section.subheading && <h3>{section.subheading}</h3>}\n          <List bulleted>\n            {section.content.map((resource, idx) => <List.Item key={\"team_section_\" + section.sectionId + \"_link_\" + idx} href={resource.link}>{resource.text}</List.Item>)}\n          </List>\n          <br />\n        </div>\n      )\n    })\n\n    return (\n      <div>\n        <Grid stackable reversed=\"mobile\">\n          <Grid.Column mobile={16} computer={8}>\n            <h2>Team Members</h2>\n            {sections}\n          </Grid.Column>\n        </Grid>\n\n        <br /><br />\n      </div>\n    );\n  }\n}\n\nexport default Team;","import React, { Component } from \"react\";\nimport { Loader, Dimmer, Grid } from \"semantic-ui-react\";\n\nclass About extends Component {\n  state = {\n    msg: '',\n    loadingData: false,\n  }\n\n  async componentDidMount() {\n    this.setState({ loadingData: true });\n    document.title = \"Docker For Edu | About\";\n    this.setState({ loadingData: false });\n  }\n\n  render() {\n    if (this.state.loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n      <div>\n        <Grid stackable reversed=\"mobile\">\n          <Grid.Column mobile={16} computer={16}>\n            <h2>About This Site</h2>\n            <p>This is a website set up at the NYU Tandon School of Engineering, intended to forward using Docker in education.</p>\n          </Grid.Column>\n        </Grid>\n\n        <br /><br />\n      </div>\n    );\n  }\n}\n\nexport default About;","import React, { Component } from \"react\"\nimport { Button, Grid } from \"semantic-ui-react\"\n\nclass EditForm extends Component {\n  state = {\n    components: [],\n    selectedComponent: '',\n    componentData: {}\n  }\n\n  async componentDidMount() {\n    this.setState({\n      components: await this.getComponents()\n    })\n  }\n\n  async getComponents() {\n    /* Make a query to DB to return all the components, returning hardcoded values for now. */\n    return [\"Home\", \"Home-Items\", \"Menu\", \"Resources\", \"Team\"]\n  }\n\n  renderComponents() {\n    const componentSelectors = ((arr, size) => {\n      const renderGrid = []\n      for (let i = 0; i < arr.length; i += size) {\n        const subArray = arr.slice(i, i + size)\n        const rowButtons = subArray.map((component, id) =>\n          <Grid.Column mobile={12} computer={4} key={id}>\n            <Button floated=\"left\" onClick={() => this.selectComponent(component)} > {component} </Button>\n          </Grid.Column>\n        )\n        renderGrid.push(\n          <Grid.Row key={\"grid_row_\" + renderGrid.length + 1}>\n            {rowButtons}\n          </Grid.Row>\n        )\n      }\n      return renderGrid\n    })(this.state.components, 3)\n    return (\n      <Grid column='equal' centered>\n        {componentSelectors}\n      </Grid>\n    )\n  }\n\n  async getComponentData(component) {\n    /* Retrieve JSON from the DB for the selected component. */\n    return {}\n  }\n\n  async selectComponent(component) {\n    this.setState({\n      selectedComponent: component,\n      componentData: await this.getComponentData(component)\n    })\n  }\n\n  render() {\n    if (!this.state.selectedComponent) {\n      return (\n        <div>\n          <br />\n          <h3 style={{ \"textAlign\": \"center\" }}>Select the Component to Modify</h3>\n          <br /><br />\n          {this.renderComponents()}\n        </div>\n      )\n    } else {\n      return (\n        <form>\n          <div>Work in Progress!</div>\n          <button onClick={() => { window.location.pathname = \"/edit\" }}>Go Back to Components</button>\n        </form>\n      )\n    }\n  }\n}\n\nexport default EditForm","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Layout from './components/Layout';\nimport Home from './components/Home';\nimport Resources from './components/Resources';\nimport Team from './components/Team';\nimport About from './components/About';\nimport EditForm from './components/EditForm';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/resources\" component={Resources} />\n            <Route exact path=\"/team\" component={Team} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/edit\" component={EditForm} />\n          </Switch>\n        </Layout>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}