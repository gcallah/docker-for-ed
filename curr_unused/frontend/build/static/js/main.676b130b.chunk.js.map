{"version":3,"sources":["components/Header.js","components/Layout.js","components/Home-Items.js","components/Home.js","components/Resources.js","components/Team.js","components/About.js","components/EditForm.js","App.js","serviceWorker.js","index.js"],"names":["_callee","domain","response","data","MenuItems","regenerator_default","a","wrap","_context","prev","next","window","location","hostname","includes","axios","get","concat","sent","result","dataItems","map","item","idx","react_default","createElement","Menu","Item","key","Link","to","link","name","abrupt","style","marginTop","size","position","stop","setupMenu","Layout","state","loadingData","Header","this","setState","Container","props","children","Component","homeItems","items","Card","fluid","Content","Meta","status","Description","description","details","Modal","trigger","Button","floated","primary","basic","Header_Header","List","bulleted","instructions","instruction","instrIdx","target","href","downloadButton","text","setupHomeItems","Home","msg","homeData","renderItems","itemComponents","arr","renderGrid","i","length","rowItems","slice","id","Grid","Column","mobile","computer","push","Row","_this","stackable","centered","document","title","Dimmer","active","inverted","Loader","textAlign","heading","Resources","sections","section","sectionId","subheading","content","resource","reversed","Team","About","EditForm","attrs","components","selectedComponent","componentData","confirmOpen","submitSuccess","mainScreen","getComponents","componentName","displayName","_this2","capitalize","str","charAt","toUpperCase","_this3","componentSelectors","component","onClick","selectComponent","column","e","_ref","value","getComponentData","_this4","Object","entries","attr","Form","Field","Input","defaultValue","onChange","handleChange","console","log","_this5","Confirm","header","confirmButton","open","onCancel","closeConfirm","onConfirm","submitData","success","createForm","Message","type","confirm","renderComponents","App","HashRouter","components_Layout","Switch","Route","exact","path","Boolean","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.676b130b.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nasync function setupMenu() {\n  \n  const domain = window.location.hostname.includes('localhost') ? 'http://localhost:8000' : 'https://docker4ed.pythonanywhere.com'\n  const response = await axios.get(`${domain}/get?component=menu`)\n  const { result: data } = response.data\n\n  const MenuItems = data.dataItems.map((item, idx) => <Menu.Item key={\"menuItem_\"+idx}><Link to={item.link}>{item.name}</Link></Menu.Item>)\n  \n  return (\n    <Menu style={{ marginTop: '0px', }} size={'large'}>\n      <Menu.Item><Link to='/'>Docker4Edu</Link></Menu.Item>\n      <Menu.Menu position=\"right\">\n        {MenuItems}\n      </Menu.Menu>\n    </Menu>\n  );\n};\n\nexport default setupMenu","import React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport setupMenu from './Header';\n\nclass Layout extends Component {\n  state = {\n    loadingData: true,\n    Header: {}\n  }\n\n  async componentDidMount() {\n    const Header = await setupMenu()\n    this.setState({ Header, loadingData: false })\n  }\n\n  render() {\n    if (this.state.loadingData) {\n      return (<div></div>)\n    }\n    return (\n      <Container>\n        \n        { this.state.Header }\n        {this.props.children}\n      </Container>\n    );\n  }\n\n}\n\nexport default Layout","import React from \"react\";\nimport { Card, Button, Modal, Header, List } from \"semantic-ui-react\";\nimport axios from 'axios'\n\n\nasync function setupHomeItems() {\n  const domain = window.location.hostname.includes('localhost') ? 'http://localhost:8000' : 'https://docker4ed.pythonanywhere.com'\n  \n  const response = await axios.get(`${domain}/get?component=homeitems`)\n  const {result: data} = response.data\n\n  const homeItems = data.items.map((item, idx) => {\n    return (\n      <Card fluid key={\"card_\" + (idx)}>\n        <Card.Content>\n          <Card.Header>{item.name}</Card.Header>\n          <Card.Meta>\n            <span>Status: {item.status}</span>\n          </Card.Meta>\n          <Card.Description>{item.description}</Card.Description>\n          {item.details &&\n            <Modal size={'tiny'} trigger={<Button floated=\"right\" primary basic>Details</Button>}>\n              <Modal.Header>{item.name} Details</Modal.Header>\n              <Modal.Content>\n                <Modal.Description>\n                  <Header>Instructions</Header>\n                  <List bulleted>\n                    {item.details.instructions.map((instruction, instrIdx) => <List.Item key={\"card_\" + (idx) + \"_instr_\" + (instrIdx)}>{instruction}</List.Item>)}\n                  </List>\n                  <Header>Download</Header>\n                  <Button target=\"_blank\" href={item.details.downloadButton.link} primary>{item.details.downloadButton.text}</Button>\n                  <br />\n                </Modal.Description>\n              </Modal.Content>\n            </Modal>\n          }\n        </Card.Content>\n      </Card>\n    )\n  });\n  return homeItems\n}\n\n\nexport default setupHomeItems","import React, { Component } from \"react\";\nimport { Loader, Dimmer, Grid } from \"semantic-ui-react\";\nimport setupHomeItems from \"./Home-Items\";\nimport axios from 'axios';\n\nclass Home extends Component {\n  state = {\n    msg: '',\n    loadingData: false,\n    homeData: {},\n    homeItems: {}\n  }\n  \n  async componentDidMount() {\n    const domain = window.location.hostname.includes('localhost') ? 'http://localhost:8000' : 'https://docker4ed.pythonanywhere.com'\n    const response = await axios.get(`${domain}/get?component=home`)\n    const { result: homeData } = response.data\n    document.title = homeData.title;\n    this.setState({ loadingData: false, homeData, homeItems: await setupHomeItems() })\n  }\n\n  renderItems = () => {\n    const itemComponents = ((arr, size) => {\n      const renderGrid = []\n      for (var i = 0; i < arr.length; i += size) {\n        const subArray = arr.slice(i, i + size)\n        const rowItems = subArray.map((item, id) =>\n          <Grid.Column key={id} mobile={16} computer={8}>\n            {item}\n          </Grid.Column>\n        )\n        renderGrid.push(\n          <Grid.Row key={\"grid_row_\" + renderGrid.length + 1}>\n            {rowItems}\n          </Grid.Row>\n        )\n      }\n      return renderGrid\n    })(this.state.homeItems, 2)\n\n    return (\n      <Grid stackable centered>\n        {itemComponents}\n      </Grid>\n    );\n  }\n\n  render() {\n    if (this.state.loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n      <div>\n        <br />\n        <h1 style={{ \"textAlign\": \"center\" }}>{this.state.homeData.heading}</h1>\n        <br /><br />\n        {this.renderItems()}\n        <br /><br />\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport { Loader, Dimmer, Grid, List } from \"semantic-ui-react\";\nimport axios from 'axios'\n\nclass Resources extends Component {\n  \n  state = {\n    msg: '',\n    loadingData: true,\n    data: {}\n  }\n  \n  async componentDidMount() {\n    const domain = window.location.hostname.includes('localhost') ? 'http://localhost:8000' : 'https://docker4ed.pythonanywhere.com'\n    const response = await axios.get(`${domain}/get?component=resources`)\n    const {result: data} = response.data\n    document.title = data.title;\n    this.setState({ loadingData: false, data });\n  }\n\n  render() {\n    if (this.state.loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n    const sections = this.state.data.items.map(section => {\n      return (\n        <div key={\"resources_section_\" + section.sectionId}>\n          {section.subheading && <h3>{section.subheading}</h3>}\n          <List bulleted>\n            {section.content.map((resource, idx) => <List.Item key={\"resources_section_\" + section.sectionId + \"_link_\" + idx} href={resource.link}>{resource.text}</List.Item>)}\n          </List>\n          <br />\n        </div>\n      )\n    })\n\n    return (\n      <div>\n        <Grid stackable reversed=\"mobile\">\n          <Grid.Column mobile={16} computer={8}>\n            <h2>{this.state.data.title}</h2>\n            {sections}\n          </Grid.Column>\n        </Grid>\n\n        <br /><br />\n      </div>\n    );\n  }\n}\n\nexport default Resources;","import React, { Component } from \"react\"\nimport { Loader, Dimmer, Grid, List } from \"semantic-ui-react\"\nimport axios from 'axios'\n\nclass Team extends Component {\n  state = {\n    msg: '',\n    loadingData: true,\n    data: {}\n  }\n\n  async componentDidMount() {\n    const domain = window.location.hostname.includes('localhost') ? 'http://localhost:8000' : 'https://docker4ed.pythonanywhere.com'\n    const response = await axios.get(`${domain}/get?component=team`)\n    const { result: data } = response.data\n    this.setState({ loadingData: false, data });\n  }\n\n  render() {\n    if (this.state.loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n    const sections = this.state.data.items.map(section => {\n      return (\n        <div key={\"team_section_\" + section.sectionId}>\n          {section.subheading && <h3>{section.subheading}</h3>}\n          <List bulleted>\n            {section.content.map((resource, idx) => <List.Item key={\"team_section_\" + section.sectionId + \"_link_\" + idx} href={resource.link}>{resource.text}</List.Item>)}\n          </List>\n          <br />\n        </div>\n      )\n    })\n\n    return (\n      <div>\n        <Grid stackable reversed=\"mobile\">\n          <Grid.Column mobile={16} computer={8}>\n            <h2>Team Members</h2>\n            {sections}\n          </Grid.Column>\n        </Grid>\n\n        <br /><br />\n      </div>\n    );\n  }\n}\n\nexport default Team;","import React, { Component } from \"react\";\nimport { Loader, Dimmer, Grid } from \"semantic-ui-react\";\n\nclass About extends Component {\n  state = {\n    msg: '',\n    loadingData: true,\n  }\n\n  async componentDidMount() {\n    document.title = \"Docker For Edu | About\";\n    this.setState({ loadingData: false });\n  }\n\n  render() {\n    if (this.state.loadingData) {\n      return (\n        <Dimmer active inverted>\n          <Loader size='massive'>Loading...</Loader>\n        </Dimmer>\n      );\n    }\n\n    return (\n      <div>\n        <Grid stackable reversed=\"mobile\">\n          <Grid.Column mobile={16} computer={16}>\n            <h2>About This Site</h2>\n            <p>This is a website set up at the NYU Tandon School of Engineering, intended to forward using Docker in education.</p>\n          </Grid.Column>\n        </Grid>\n\n        <br /><br />\n      </div>\n    );\n  }\n}\n\nexport default About;","import React, { Component } from \"react\"\nimport { Button, Form, Grid, Message, Confirm } from \"semantic-ui-react\"\nimport axios from 'axios'\n\nclass EditForm extends Component {\n  domain = window.location.hostname.includes('localhost') ? 'http://localhost:8000' : 'https://docker4ed.pythonanywhere.com'\n  attrs = {}\n  state = {\n    components: [],\n    selectedComponent: '',\n    componentData: {},\n    heading: '',\n    confirmOpen: false,\n    submitSuccess: false,\n  }\n\n  async componentDidMount() {\n    document.title = 'Edit Components'\n    this.mainScreen()\n  }\n\n  async mainScreen() {\n    this.attrs = {}\n    this.setState({\n      components: await this.getComponents(),\n      selectedComponent: '',\n      componentData: {},\n      heading: 'Edit Components'\n    })\n  }\n\n  async getComponents() {\n    const response = await axios.get(`${this.domain}/get?component=all`)\n    const {result: data} = response.data\n    return data.map(componentName => { return {\n      \"displayName\": this.capitalize(componentName),\n      componentName\n    }})\n  }\n\n  capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1)\n  }\n\n  renderComponents() {\n    const componentSelectors = ((arr) => {\n      const renderGrid = arr.map((component, id) => {\n        return (\n          <Grid.Row mobile={12} computer={4} key={id}>\n            <Button floated=\"left\" onClick={() => this.selectComponent(component)} > {component.displayName} </Button>\n          </Grid.Row>\n        )\n      })\n      return renderGrid\n    })(this.state.components)\n    return (\n      <Grid column='equal' centered>\n        {componentSelectors}\n      </Grid>\n    )\n  }\n\n  async getComponentData(component) {\n    const response = await axios.get(`${this.domain}/get?component=${component}`)\n    const {result: data} = response.data\n    return data\n  }\n\n  handleChange(e, {name, value}) {\n    this.attrs[name] = value\n  }\n\n  async selectComponent(component) {\n    this.setState({\n      selectedComponent: component.displayName,\n      componentData: await this.getComponentData(component.componentName),\n      heading: `Editing ${component.displayName} Component`\n    })\n  }\n\n  createForm(componentData) {\n    this.attrs = componentData\n    \n    return Object.entries(componentData).map((attr, idx) => (\n      <div key={idx}>\n        <Form.Field>\n          <label>{this.capitalize(attr[0])+':'}</label>\n          <Form.Input name={attr[0]} id={attr[0]} defaultValue={attr[1]} onChange={this.handleChange}></Form.Input>\n        </Form.Field>\n        <br />\n      </div>\n    )\n    )\n  }\n\n  confirm() {\n    this.setState({\n      confirmOpen: true\n    })\n  }\n\n  closeConfirm() {\n    this.setState({\n      confirmOpen: false\n    })\n  }\n\n  async submitData() {\n    this.setState({\n      confirmOpen: false\n    })\n    console.log(this.attrs)\n    this.setState({\n      submitSuccess: true\n    })\n  }\n\n  render() {\n    if (!this.state.selectedComponent) {\n      return (\n        <div>\n          <br />\n          <h1 style={{ \"textAlign\": \"center\" }}>{this.state.heading}</h1>\n          <br />\n          <h3 style={{ \"textAlign\": \"center\" }}>Select the Component to Modify</h3>\n          <br /><br />\n          {this.renderComponents()}\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <Confirm\n            header={`This will change the ${this.state.selectedComponent} Component!`}\n            content={`Are you sure you want to make this change?`}\n            confirmButton={`Yes`}\n            open={this.state.confirmOpen} \n            onCancel={() => this.closeConfirm()} \n            onConfirm={()=> this.submitData()} \n          />\n          <br />\n          <h1 style={{ \"textAlign\": \"center\" }}>{this.state.heading}</h1>\n          <Form success>\n          {this.createForm(this.state.componentData)}\n          {this.state.submitSuccess && <Message success header='Component Modified!' content=\"Please check the website to see if the changes have reflected.\" />}\n          <Button type=\"submit\" onClick={() => this.confirm()} >Submit</Button>\n          <Button onClick={() => this.mainScreen()}>Go Back</Button>\n          </Form>\n        </div>\n      )\n    }\n  }\n}\n\nexport default EditForm","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Layout from './components/Layout';\nimport Home from './components/Home';\nimport Resources from './components/Resources';\nimport Team from './components/Team';\nimport About from './components/About';\nimport EditForm from './components/EditForm';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/resources\" component={Resources} />\n            <Route exact path=\"/team\" component={Team} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/edit\" component={EditForm} />\n          </Switch>\n        </Layout>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}